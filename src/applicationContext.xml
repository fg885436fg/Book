<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task.xsd 
        ">


	<context:property-placeholder location="classpath:db.properties" local-override="true" />
	<!-- 配置 自动扫描器 -->
	
	<context:component-scan base-package="com.bswxb.base" />
	<context:component-scan base-package="com.bswxb.dao" />
	<context:component-scan base-package="com.bswxb.po" />
	<context:component-scan base-package="com.bswxb.vo" />
    <context:component-scan base-package="com.bswxb.service" />

	<context:component-scan base-package="test" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_user}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="12" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="200" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	
	<!-- 配置sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
			
			<!-- 制定Hibernate的连接方言 -->  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> 
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop> 
				<prop key="hibernate.hbm2ddl.auto">update</prop>   
				 <!-- 开启二级缓存 -->  
                <prop key="hibernate.cache.use_second_level_cache">true</prop>  
				  <!-- 启用查询缓存 -->  
                <prop key="hibernate.cache.use_query_cache">true</prop> 
                  <!-- 配置二级缓存提供商 -->  
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
               
                <!-- 加载缓存所需配置文件 -->  
                <prop key="hibernate.net.sf.ehcache.configurationResourceName">classpath:ehcache.xml</prop>   
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.bswxb.po</value>
				
			</list>
			
		</property>
		
		
	</bean>
	
	<!-- 配置事物管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置基于注解的事务配置 -->
	<!-- 编程式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 定时器 -->
	<task:annotation-driven/>  
	
	
	
</beans>